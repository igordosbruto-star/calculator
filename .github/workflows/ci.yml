---
name: CI

'on':
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache build
        uses: actions/cache@v3
        with:
          path: |
            core
            src/duke
          key: ${{ runner.os }}-build-${{ hashFiles('core/**','src/duke/**','tests/**') }}

      - name: Install dependencies
        run: |
          if [ $RUNNER_OS = Linux ]; then
            sudo apt-get update
            sudo apt-get install -y g++ make nlohmann-json3-dev qt6-base-dev pkg-config libtinyxml2-dev
          elif [ $RUNNER_OS = macOS ]; then
            brew update
            brew install qt pkg-config nlohmann-json tinyxml2
          else
            choco install -y mingw make pkgconfiglite qt6-base-dev tinyxml2
          fi

      - name: Build core
        id: build_core
        run: |
          set -o pipefail
          make -C core 2>&1 | tee core_build.log
        continue-on-error: true

      - name: Build duke module
        id: build_duke
        run: |
          set -o pipefail
          make -C src/duke 2>&1 | tee duke_build.log
        continue-on-error: true

      - name: Run tests
        id: run_tests
        run: |
          set -o pipefail
          export QT_QPA_PLATFORM=offscreen
          make -C tests 2>&1 | tee tests.log
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: logs-${{ matrix.os }}
          path: |
            core_build.log
            duke_build.log
            tests.log

      - name: Fail if errors
        if: steps.build_core.outcome == 'failure' || steps.build_duke.outcome == 'failure' || steps.run_tests.outcome == 'failure'
        run: exit 1
